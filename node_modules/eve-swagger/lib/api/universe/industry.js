'use strict';

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * An api adapter over the end points handling industry  via functions in the
 * [industry](https://esi.tech.ccp.is/latest/#/Industry) ESI endpoints. You
 * should not usually instantiate this directly as its constructor requires an
 * internal api instance.
 */
var Industry = function () {
  /**
   * Create a new Industry instance using the given `agent`.
   *
   * @param agent {ESIAgent} The agent provider
   * @constructor
   */
  function Industry(agent) {
    (0, _classCallCheck3.default)(this, Industry);

    this._agent = agent;
  }

  /**
   * @esi_route get_industry_facilities
   * @esi_example esi.industry.facilities()
   *
   * @return {Promise.<Array.<Object>>}
   */


  (0, _createClass3.default)(Industry, [{
    key: 'facilities',
    value: function facilities() {
      return this._agent.noAuth.get('/v1/industry/facilities/');
    }

    /**
     * @esi_route get_industry_systems
     * @esi_example esi.industry.systemCosts()
     *
     * @return {Promise.<Array.<Object>>}
     */

  }, {
    key: 'systemCosts',
    value: function systemCosts() {
      return this._agent.noAuth.get('/v1/industry/systems/');
    }
  }]);
  return Industry;
}();

module.exports = Industry;