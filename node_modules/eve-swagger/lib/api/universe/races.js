'use strict';

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CallableInstance = require('../../internal/callable-instance');

/**
 * An api adapter over the end points handling races via functions in the
 * [universe](https://esi.tech.ccp.is/latest/#/Universe) ESI endpoints. You
 * should not usually instantiate this directly as its constructor requires an
 * internal api instance.
 *
 * This is a function class so instances of `Races` are functions and can be
 * invoked directly, besides accessing its members. Its default function action
 * is equivalent to {@link Races#all all}.
 */

var Races = function (_CallableInstance) {
  (0, _inherits3.default)(Races, _CallableInstance);

  /**
   * Create a new Races function using the given `agent`.
   *
   * @param agent {ESIAgent} The ESI agent
   * @constructor
   */
  function Races(agent) {
    (0, _classCallCheck3.default)(this, Races);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Races.__proto__ || (0, _getPrototypeOf2.default)(Races)).call(this, function () {
      return _this.all();
    }));

    _this._agent = agent;
    return _this;
  }

  /**
   * @esi_route get_universe_races
   * @esi_example esi.races()
   *
   * @returns {Promise.<Array.<Object>>}
   */


  (0, _createClass3.default)(Races, [{
    key: 'all',
    value: function all() {
      return this._agent.noAuth.get('/v1/universe/races/');
    }
  }]);
  return Races;
}(CallableInstance);

module.exports = Races;