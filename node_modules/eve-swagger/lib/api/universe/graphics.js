'use strict';

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Search = require('../search');

var CallableInstance = require('../../internal/callable-instance');

/**
 * An api adapter that provides functions for accessing various details for a
 * graphic specified by id, via functions in the
 * [universe](https://esi.tech.ccp.is/latest/#/Universe) ESI endpoints. You
 * should not usually instantiate this directly as its constructor requires an
 * internal api instance.
 */

var Graphic = function () {
  /**
   * Create a new Graphic for the given `agent` provider and specific
   * `graphicId`.
   *
   * @param agent {ESIAgent} The ESI agent used to generate web requests
   * @param graphicId {Number} The graphic id that is used for all
   *     requests
   * @constructor
   */
  function Graphic(agent, graphicId) {
    (0, _classCallCheck3.default)(this, Graphic);

    this._agent = agent;
    this._id = graphicId;
  }

  /**
   * @esi_route get_universe_graphics_graphic_id
   * @esi_example esi.graphics(1).info()
   *
   * @returns {Promise.<Object>}
   */


  (0, _createClass3.default)(Graphic, [{
    key: 'info',
    value: function info() {
      return this._agent.noAuth.get('/v1/universe/graphics/{graphic_id}/', { path: { 'graphic_id': this._id } });
    }
  }]);
  return Graphic;
}();

/**
 * An api adapter that provides functions for accessing graphics information via
 * the [universe](https://esi.tech.ccp.is/latest/#/Universe) ESI end points. You
 * should not usually instantiate this directly as its constructor requires an
 * internal api instance.
 *
 * This is a function class so instances of `Graphics` are functions and
 * can be invoked directly, besides accessing its members. Its default function
 * action is equivalent to {@link Graphics#all all} or {@link Graphics#get get}
 * if an id is provided.
 */


var Graphics = function (_CallableInstance) {
  (0, _inherits3.default)(Graphics, _CallableInstance);

  /**
   * Create a new Graphics instance using the given `agent`.
   *
   * @param agent {ESIAgent} The ESI agent
   * @constructor
   */
  function Graphics(agent) {
    (0, _classCallCheck3.default)(this, Graphics);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Graphics.__proto__ || (0, _getPrototypeOf2.default)(Graphics)).call(this, function (id) {
      return id ? _this.get(id) : _this.all();
    }));

    _this._agent = agent;
    return _this;
  }

  /**
   * @esi_route get_universe_graphics
   * @esi_example esi.graphics()
   *
   * @returns {Promise.<Array.<Number>>}
   */


  (0, _createClass3.default)(Graphics, [{
    key: 'all',
    value: function all() {
      return this._agent.noAuth.get('/v1/universe/graphics/');
    }

    /**
     * Create a new Graphic end point targeting the particular moon
     * by `id`.
     *
     * @param id {Number} The moon id
     * @returns {Graphic}
     */

  }, {
    key: 'get',
    value: function get(id) {
      return new Graphic(this._agent, id);
    }
  }]);
  return Graphics;
}(CallableInstance);

module.exports = Graphics;