'use strict';

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CallableInstance = require('../../internal/callable-instance');

/**
 * An api adapter that provides functions for accessing various details for a
 * specific event specified by id via functions in the
 * [calendar](https://esi.tech.ccp.is/latest/#/Calendar) ESI endpoints.
 *
 * You should not usually instantiate this directly as its constructor requires
 * an internal api instance.
 */

var Event = function () {
  /**
   * Create a new Event represented as `eventId` from the given `calendar`.
   *
   * @param calendar {Calendar} The calendar owning the event
   * @param eventId {Number} The event id that is used for all requests
   * @constructor
   */
  function Event(calendar, eventId) {
    (0, _classCallCheck3.default)(this, Event);

    this._cal = calendar;
    this._id = eventId;
  }

  /**
   * @esi_route get_characters_character_id_calendar_event_id
   * @esi_example esi.characters(1, 'token').calendar(2).info()
   *
   * @returns {Promise.<Object>}
   */


  (0, _createClass3.default)(Event, [{
    key: 'info',
    value: function info() {
      return this._cal._agent.auth(this._cal._token).get('/v3/characters/{character_id}/calendar/{event_id}/', {
        path: {
          'character_id': this._cal._id,
          'event_id': this._id
        }
      });
    }
  }, {
    key: '_respond',
    value: function _respond(state) {
      return this._cal._agent.auth(this._cal._token).put('/v3/characters/{character_id}/calendar/{event_id}/', {
        path: {
          'character_id': this._cal._id,
          'event_id': this._id
        },
        body: { 'response': state }
      });
    }

    /**
     * @esi_route put_characters_character_id_calendar_event_id
     * @esi_param response - {"response": "declined"}
     * @esi_example esi.characters(1, 'token').calendar(2).decline()
     *
     * @returns {Promise.<Object>}
     */

  }, {
    key: 'decline',
    value: function decline() {
      return this._respond('declined');
    }

    /**
     * @esi_route put_characters_character_id_calendar_event_id
     * @esi_param response - {"response": "accepted"}
     * @esi_example esi.characters(1, 'token').calendar(2).accept()
     *
     * @returns {Promise.<Object>}
     */

  }, {
    key: 'accept',
    value: function accept() {
      return this._respond('accepted');
    }

    /**
     * @esi_route put_characters_character_id_calendar_event_id
     * @esi_param response - {"response": "tentative"}
     * @esi_example esi.characters(1, 'token').calendar(2).tentative()
     *
     * @returns {Promise.<Object>}
     */

  }, {
    key: 'tentative',
    value: function tentative() {
      return this._respond('tentative');
    }
  }]);
  return Event;
}();

/**
 * An api adapter over the end points handling a character's calendar via
 * functions in the [calendar](https://esi.tech.ccp.is/latest/#/Calendar)
 * ESI endpoints. You should not usually instantiate this directly as its
 * constructor requires an internal api instance.
 *
 * This is a function class so instances of `Calendar` are functions and can be
 * invoked directly, besides accessing its members. Its default function action
 * is equivalent to {@link Calendar#event event} or {@link Calendar#recent
 * recent} if no id is provided.
 */


var Calendar = function (_CallableInstance) {
  (0, _inherits3.default)(Calendar, _CallableInstance);

  /**
   * Create a new Calendar function using the given `agent`, for the
   * character described by `characterId` with SSO access from `token`.
   *
   * @param agent {ESIAgent} The ESI agent
   * @param characterId {Number} The character id whose calendar is accessed
   * @param token {String} The SSO access token for the character
   * @constructor
   */
  function Calendar(agent, characterId, token) {
    (0, _classCallCheck3.default)(this, Calendar);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Calendar.__proto__ || (0, _getPrototypeOf2.default)(Calendar)).call(this, function (id) {
      return id ? _this.event(id) : _this.recent();
    }));

    _this._agent = agent;
    _this._id = characterId;
    _this._token = token;
    return _this;
  }

  /**
   * Create a new Event end point targeting the particular event by
   * `id`.
   *
   * @param id {Number} The event id
   * @returns {Event}
   */


  (0, _createClass3.default)(Calendar, [{
    key: 'event',
    value: function event(id) {
      return new Event(this, id);
    }

    /**
     * @esi_route get_characters_character_id_calendar
     * @esi_param from_event - fromEventId
     * @esi_example esi.characters(1, 'token').calendar()
     *
     * @param fromEventId {Number} If `0`, the most recent events are returned.
     * @returns {Promise.<Array.<Object>>}
     */

  }, {
    key: 'recent',
    value: function recent() {
      var fromEventId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      return this._agent.auth(this._token).get('/v1/characters/{character_id}/calendar/', {
        path: { 'character_id': this._id },
        query: { 'from_event': fromEventId == 0 ? null : fromEventId }
      });
    }
  }]);
  return Calendar;
}(CallableInstance);

module.exports = Calendar;