'use strict';

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CallableInstance = require('../../internal/callable-instance');

/**
 * An api adapter over the end points handling a character's bookmarks via
 * functions in the [bookmarks](https://esi.tech.ccp.is/latest/#/Bookmarks)
 * ESI endpoints. You should not usually instantiate this directly as its
 * constructor requires an internal api instance.
 *
 * This is a function class so instances of `Bookmarks` are functions and can be
 * invoked directly, besides accessing its members. Its default function action
 * is equivalent to {@link Bookmarks#all all}.
 */

var Bookmarks = function (_CallableInstance) {
  (0, _inherits3.default)(Bookmarks, _CallableInstance);

  /**
   * Create a new Bookmarks function using the given `agent`, for the character
   * described by `characterId` with SSO access from `token`.
   *
   * @param agent {ESIAgent} The ESI agent
   * @param characterId {Number} The character id whose calendar is accessed
   * @param token {String} The SSO access token for the character
   * @constructor
   */
  function Bookmarks(agent, characterId, token) {
    (0, _classCallCheck3.default)(this, Bookmarks);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Bookmarks.__proto__ || (0, _getPrototypeOf2.default)(Bookmarks)).call(this, function () {
      return _this.all();
    }));

    _this._agent = agent;
    _this._id = characterId;
    _this._token = token;
    return _this;
  }

  /**
   * @esi_route get_characters_character_id_bookmarks_folders
   * @esi_example esi.characters(1, 'token').bookmarks.folders()
   *
   * @returns {Promise.<Array.<Object>>}
   */


  (0, _createClass3.default)(Bookmarks, [{
    key: 'folders',
    value: function folders() {
      return this._agent.auth(this._token).get('/v1/characters/{character_id}/bookmarks/folders/', { path: { 'character_id': this._id } });
    }

    /**
     * @esi_route get_characters_character_id_bookmarks
     * @esi_example esi.characters(1, 'token').bookmarks()
     *
     * @returns {Promise.<Array.<Object>>}
     */

  }, {
    key: 'all',
    value: function all() {
      return this._agent.auth(this._token).get('/v1/characters/{character_id}/bookmarks/', { path: { 'character_id': this._id } });
    }
  }]);
  return Bookmarks;
}(CallableInstance);

module.exports = Bookmarks;