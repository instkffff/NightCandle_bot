'use strict';

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * An api adapter that provides functions for modifying the character's in-game
 * windows via functions in the [user
 * interface](https://esi.tech.ccp.is/latest/#/User_Interface) ESI endpoints.
 * You should not usually instantiate this directly as its constructor requires
 * an internal api instance.
 */
var Window = function () {
  /**
   * Create a new Window for the given `agent` provider. Requires an access
   * token for a character currently in game.
   *
   * @param agent {ESIAgent} The agent used to generate web requests
   * @param token {String} Access token for the character in game
   * @constructor
   */
  function Window(agent, token) {
    (0, _classCallCheck3.default)(this, Window);

    this._agent = agent;
    this._token = token;
  }

  /**
   * @esi_route post_ui_openwindow_information
   * @esi_param target_id - id
   * @esi_example esi.characters(1, 'token').window.info(2)
   *
   * @param id {Number}
   * @return {Promise.<Object>}
   */


  (0, _createClass3.default)(Window, [{
    key: 'info',
    value: function info(id) {
      return this._agent.auth(this._token).post('/v1/ui/openwindow/information/', { query: { 'target_id': id } });
    }

    /**
     * @esi_route post_ui_openwindow_marketdetails
     * @esi_example esi.characters(1, 'token').window.market(2)
     *
     * @param typeId {Number}
     * @return {Promise.<Object>}
     */

  }, {
    key: 'market',
    value: function market(typeId) {
      return this._agent.auth(this._token).post('/v1/ui/openwindow/marketdetails/', { query: { 'type_id': typeId } });
    }

    /**
     * @esi_route post_ui_openwindow_contract
     * @esi_example esi.characters(1, 'token').window.contract(2)
     *
     * @param contractId {Number}
     * @return {Promise.<Object>}
     */

  }, {
    key: 'contract',
    value: function contract(contractId) {
      return this._agent.auth(this._token).post('/v1/ui/openwindow/contract/', { query: { 'contract_id': contractId } });
    }

    /**
     * @esi_route post_ui_openwindow_newmail
     * @esi_param new_mail - settings
     * @esi_example esi.characters(1, 'token').window.newMail({...})
     *
     * @param settings {Object}
     * @return {Promise.<Object>}
     */

  }, {
    key: 'newMail',
    value: function newMail(settings) {
      return this._agent.auth(this._token).post('/v1/ui/openwindow/newmail/', { body: settings });
    }
  }]);
  return Window;
}();

module.exports = Window;